// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A tool to evaluate the results of photo enhancements.
 *
 * - evaluateEnhancements - A function that handles the photo enhancement evaluation process.
 * - EvaluateEnhancementsInput - The input type for the evaluateEnhancements function.
 * - EvaluateEnhancementsOutput - The return type for the evaluateEnhancements function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EvaluateEnhancementsInputSchema = z.object({
  originalPhotoDataUri: z
    .string()
    .describe(
      "The original photo, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  enhancedPhotoDataUri: z
    .string()
    .describe(
      "The enhanced photo, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  userExpectation: z.string().describe('The user expectation of the enhancement.'),
});
export type EvaluateEnhancementsInput = z.infer<typeof EvaluateEnhancementsInputSchema>;

const EvaluateEnhancementsOutputSchema = z.object({
  evaluation: z.string().describe('The evaluation of the enhancement result against user expectation.'),
  rating: z.number().describe('A rating from 1 to 5 on how well the enhancement met the user expectation.'),
});
export type EvaluateEnhancementsOutput = z.infer<typeof EvaluateEnhancementsOutputSchema>;

export async function evaluateEnhancements(input: EvaluateEnhancementsInput): Promise<EvaluateEnhancementsOutput> {
  return evaluateEnhancementsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'evaluateEnhancementsPrompt',
  input: {schema: EvaluateEnhancementsInputSchema},
  output: {schema: EvaluateEnhancementsOutputSchema},
  prompt: `You are an expert in image processing and visual aesthetics. Your task is to evaluate how well an enhanced photo meets a user's expectation.

You are provided with the original photo, the enhanced photo, and the user's expectation.

Original Photo: {{media url=originalPhotoDataUri}}
Enhanced Photo: {{media url=enhancedPhotoDataUri}}
User Expectation: {{{userExpectation}}}

Evaluate the enhanced photo based on the user's expectation. Provide a detailed evaluation and a rating from 1 to 5, where 1 means the enhancement completely failed to meet the expectation and 5 means the enhancement perfectly met the expectation.

Output the evaluation and the rating in the JSON format.`,
});

const evaluateEnhancementsFlow = ai.defineFlow(
  {
    name: 'evaluateEnhancementsFlow',
    inputSchema: EvaluateEnhancementsInputSchema,
    outputSchema: EvaluateEnhancementsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
